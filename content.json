[{"title":"网页响应式布局","date":"2017-03-11T06:27:36.000Z","path":"blog/响应式布局20170311/","text":"网页制作响应式布局的技巧 Skill 1 学会运用 Css3 Media Queries，根据不同的屏幕分辨率，选择应用不同的Css规则Media Queries语法简介：max-width：若浏览区域的宽度小于400像素，则下方的CSS描述就会立即被套用： @media screen and (max-width:400px){ .class { background:#ccc; } } 也可以把要套用的描述独立成外部档案： &lt;link rel=&quot;stylesheet&quot; media=&quot;screen and (max-width: 400px)&quot; href=&quot;mini.css&quot; /&gt; Min Width：若浏览区域的宽度大于800像素，则下方的CSS描述就会立即被套用： @media screen and (min-width:800px){ .class { background:#666; } } Device Width：若浏览设备的可视范围最大为480px，则下方的CSS描述就会立即被套用：(注：移动手机目前常见最大宽度为480px，如iPhone or Android Phone) @media screen and (max-device-width:480px){ .class { background:#000; } } 针对iPhone4提供专用的css设定档： &lt;link rel= &quot;stylesheet&quot; media= &quot;only screen and (-webkit-min-device-pixel-ratio: 2)&quot; type= &quot;text/css&quot; href= &quot;iphone4.css&quot; /&gt; 针对iPad的Portrait Mode(直立)与Landscape Mode(横躺)两种浏览模式给予不同的css设定档： &lt;link rel=&quot;stylesheet&quot; media=&quot;all and (orientation:portrait)&quot; href=&quot;portrait.css&quot;&gt; &lt;link rel=&quot;stylesheet&quot; media=&quot;all and (orientation:landscape)&quot; href=&quot;landscape.css&quot;&gt; Skill 2 在网页头部加上viewport标签 &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt; 浏览器推出了“viewport meta”标签，许多移动浏览器现在都支持这个标签，W3C 协议定义 viewport meta 目前还属于草案，很多人都會在html head 处加上 viewport 这个meta data，一个典型的移动端viewport如下所示： &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt; 该属性可以控制视窗口宽度的大小。它可以被设置为实际的具体像素width= 600或为特殊设备设置宽度值。 viewport设置属性如下： width：可设定数值，或者指定为 device-width height：可设定数值，或者指定為 device-height initial-scale：第一次进入页面的初始比例 minimum-scale：允许缩小最小比例 maximum-scale：允许放大最大比例 user-scalable：允许使用者缩放，1 or 0 (yes or no)编译过程会转化成如下的语义： @viewport { width: device-width; initial-scale: 1.0 } device-width ，主要是为了让整个页面宽度与手机可视宽度相同，这样就可以简单相容于不同机型屏幕大小，如果这边width沒有设定的话，就会依照html/css给予的width当作预设值。 因为解析度不同，device-width有时候不一定是view width，所以在类似iphone 4高解析度机器上，device-width=320 ，可是实际解析度为480，这时候就需要利用javascript针对UA下去做动态调整。 user-scalable，这个属性可以让使用者能否放大、缩小页面，如果页面不允许手机使用者缩放，就直接设定0或者no，反之要启动缩放功能，就设置1或者是yes。 接下来将说明几种常用的方式，以及具体例子提供给大家參考。如果在手机端我们希望网页呈现固定，不希望使用者随意缩放，直接设定如下 &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt; 如果希望在不同device使用不同缩放大小，就必须使用javascript，检测UA(User agent)，动态设定viewport，如下： viewport = document.querySelector(&quot;meta[name=viewport]&quot;); viewport.setAttribute(&apos;content&apos;, &apos;width=device-width; initial-scale=1.0; maximum-scale=1.0; user-scalable=0;&apos;); Skill 3 不使用绝对宽度由于网页会根据屏幕宽度调整布局，所以不能使用绝对宽度（margin-left:5px）的布局，也不能使用具有绝对宽度(例如：width：200px)的元素,而最好使用百分比宽度width:20%;或者with:auto; Skill 4 字体最好不要用绝对大小(px)，而使用相对大小(em) body { font: normal 100% Helvetica, Arial, sans-serif; }上面的代码指定，字体大小是页面默认大小的100%，即16像素。 h1 { font-size: 1.5em; }h1的大小是默认大小的1.5倍，即24像素（24/16=1.5） .small { font-size: 0.875em; } small元素的大小是默认大小的0.875倍，即14像素（14/16=0.875） 这里顺便说说 px pt em rem区别： px是pixel，像素，是屏幕上显示数据的最基本的点，在HTML中，默认的单位就是px； pt是point，是印刷行业常用单位，等于1/72英寸。 em才是真正的“相对单位”（百分比嘛，当然是相对），而px和pt都是绝对单位（都有固定值）。所以，一般移动终端布局用em比较合适。 rem是css3的出现，同时引进新的单位,而rem是相对于根元素，这样就意味着，我们只需要在根元素确定一个参考值，在根元素中设置多大的字体，这完全可以根据您自己的需要。 Skill 5 流动布局（fluid grid）流动布局的含义是各个位置都是浮动的，不是固定不变的 .main { float: right; width: 70%; } .leftBar { float: left; width: 25%; } float的好处是，如果宽度太小，放不下两个元素，后面的元素会自动滚动到前面元素的下方，不会在水平方向overflow（溢出），避免了水平滚动条的出现。 Skill 6 图片的自动缩放，等比缩放 img{ max-width: 100%; }","tags":[{"name":"小知识","slug":"小知识","permalink":"http://github.com/Jwenqiang/tags/小知识/"},{"name":"网页制作","slug":"网页制作","permalink":"http://github.com/Jwenqiang/tags/网页制作/"}]},{"title":"html标签性质","date":"2017-03-11T06:04:26.000Z","path":"blog/html标签20170311/","text":"内联元素（行内元素）内联元素(inline element) a - 锚点 abbr - 缩写 acronym - 首字 b - 粗体(不推荐) bdo - bidi override big - 大字体 br - 换行 cite - 引用 code - 计算机代码(在引用源码的时候需要) dfn - 定义字段 em - 强调 font - 字体设定(不推荐) i - 斜体 img - 图片 input - 输入框 kbd - 定义键盘文本 label - 表格标签 q - 短引用 s - 中划线(不推荐) samp - 定义范例计算机代码 select - 项目选择 small - 小字体文本 span - 常用内联容器，定义文本内区块 strike - 中划线 strong - 粗体强调 sub - 下标 sup - 上标 textarea - 多行文本输入框 tt - 电传文本 u - 下划线 var - 定义变量 块元素(block element) address - 地址 blockquote - 块引用 center - 举中对齐块 dir - 目录列表 div - 常用块级容易，也是css layout的主要标签 dl - 定义列表 fieldset - form控制组 form - 交互表单 h1 - 大标题 h2 - 副标题 h3 - 3级标题 h4 - 4级标题 h5 - 5级标题 h6 - 6级标题 hr - 水平分隔线 isindex - input prompt menu - 菜单列表 noframes - frames可选内容，（对于不支持frame的浏览器显示此区块内容 noscript - ）可选脚本内容（对于不支持script的浏览器显示此内容） ol - 排序表单 p - 段落 pre - 格式化文本 table - 表格 ul - 非排序列表 可变元素可变元素为根据上下文语境决定该元素为块元素或者内联元素。 applet - java applet button - 按钮 del - 删除文本 iframe - inline frame ins - 插入的文本 map - 图片区块(map) object - object对象 script - 客户端脚本","tags":[{"name":"html","slug":"html","permalink":"http://github.com/Jwenqiang/tags/html/"},{"name":"性质","slug":"性质","permalink":"http://github.com/Jwenqiang/tags/性质/"}]},{"title":"Markdown语法","date":"2017-03-10T02:54:57.000Z","path":"blog/Markdown语法20170310/","text":"大标题 大标题一般显示工程名,类似html的\\ 你只要在标题下面跟上=====即可 中标题 中标题一般显示重点项,类似html的\\ 你只要在标题下面输入——即可 小标题 小标题类似html的\\ 小标题的格式如下 ### 小标题 注意#和标题字符中间要有空格 注意!!!下面所有语法的提示我都先用小标题提醒了!!!单行文本框这是一个单行的文本框,只要两个Tab再输入文字即可 多行文本框这是一个有多行的文本框 你可以写入代码等,每行文字只要输入两个Tab再输入文字即可 这里你可以输入一段代码 比如我们可以在多行文本框里输入一段代码,来一个Java版本的HelloWorld吧public class HelloWorld { /** * @param args */ public static void main(String[] args) { System.out.println(&quot;HelloWorld!&quot;); } } 链接1.点击这里你可以链接到www.google.com2.点击这里我你可以链接到我的博客 只是显示图片 想点击某个图片进入一个网页,比如我想点击github的icorn然后再进入www.github.com 文字被些字符包围 文字被些字符包围 只要再文字前面加上&gt;空格即可 如果你要换行的话,新起一行,输入&gt;空格即可,后面不接文字但&gt; 只能放在行首才有效 文字被些字符包围,多重包围 文字被些字符包围开始 只要再文字前面加上&gt;空格即可 如果你要换行的话,新起一行,输入&gt;空格即可,后面不接文字 但&gt; 只能放在行首才有效 特殊字符处理有一些特殊字符如&lt;,#等,只要在特殊字符前面加上转义字符\\即可你想换行的话其实可以直接用html标签\\","tags":[{"name":"Markdown","slug":"Markdown","permalink":"http://github.com/Jwenqiang/tags/Markdown/"},{"name":"语法","slug":"语法","permalink":"http://github.com/Jwenqiang/tags/语法/"}]},{"title":"SQL语句","date":"2017-03-10T02:54:57.000Z","path":"blog/SQL相关语句的写法20170310/","text":"SQL增删查改 增 1.1【插入单行】insert [into] &lt;表名&gt; (列名) values (列值)例：insert into Strdents (姓名,性别,出生日期) values &gt; &gt; &gt;(‘开心朋朋’,’男’,’1980/6/15’) 1.2【将现有表数据添加到一个已有表】insert into &lt;已有的新表&gt; (列名) select &lt;原表列名&gt; from &lt;原表名&gt;例：insert into tongxunlu (‘姓名’,’地址’,’电子邮件’)select name,address,emailfrom Strdents 1.3【直接拿现有表数据创建一个新表并填充】select &lt;新建表列名&gt; into &lt;新建表名&gt; from &lt;源表名&gt;例：select name,address,email into tongxunlu from strdents 1.4【使用union关键字合并数据进行插入多行】insert &lt;表名&gt; &lt;列名&gt; select &lt;列值&gt; tnion select &lt;列值&gt;例：insert Students (姓名,性别,出生日期)select ‘开心朋朋’,’男’,’1980/6/15’ union（union表示下一行）select ‘蓝色小明’,’男’,’19//**’ 删 2.1【删除&lt;满足条件的&gt;行】delete from &lt;表名&gt; [where &lt;删除条件&gt;]例：delete from a where name=’开心朋朋’（删除表a中列值为开心朋朋的行） 2.2【删除整个表】truncate table &lt;表名&gt;truncate table tongxunlu注意：删除表的所有行，但表的结构、列、约束、索引等不会被删除；不能用语有外建约束引用的表 改 update &lt;表名&gt; set &lt;列名=更新值&gt; [where &lt;更新条件&gt;]例：update tongxunlu set 年龄=18 where 姓名=’蓝色小名’ 查 &gt;4.1``精确（条件）查询select &lt;列名&gt; from &lt;表名&gt; [where &lt;查询条件表达试&gt;] [order by &lt;排序的列名&gt;[asc或desc]]4.1.1【查询所有数据行和列】例：select * from a说明：查询a表中所有行和列 &gt;4.1.2【查询部分行列–条件查询】例：select i,j,k from a where f=5说明：查询表a中f=5的所有行，并显示i,j,k３列&gt;4.1.3【在查询中使用ＡＳ更改列名】例：select name as 姓名 from a where xingbie=’男’说明：查询a表中性别为男的所有行，显示name列，并将name列改名为（姓名）显示&gt;4.1.4【查询空行】例：select name from a where email is null说明：查询表a中email为空的所有行，并显示name列；SQL语句中用is null或者is not null来判断是否为空行&gt;4.1.5【在查询中使用常量】例：select name, ‘唐山’ as 地址 from Student说明：查询表a，显示name列，并添加地址列，其列值都为’唐山’&gt;4.1.6【查询返回限制行数(关键字：top percent)】例１：select top 6 name from a说明：查询表a，显示列name的前６行，top为关键字例２：select top 60 percent name from a说明：查询表a，显示列name的60%，percent为关键字&gt;4.1.7【查询排序（关键字：order by , asc , desc）】例：select namefrom awhere chengji&gt;=60order by desc说明：查询a表中chengji大于等于60的所有行，并按降序显示name列；默认为ＡＳＣ升序 4.2``模糊查询&gt;4.2.1【使用like进行模糊查询】注意：like运算副只用于字符串，所以仅与char和varchar数据类型联合使用例：select from a where name like ‘赵%’说明：查询显示表a中，name字段第一个字为赵的记录&gt;4.2.2【使用between在某个范围内进行查询】例：select from a where nianling between 18 and 20说明：查询显示表a中nianling在18到20之间的记录&gt;4.2.3【使用in在列举值内进行查询】例：select name from a where address in (‘北京’,’上海’,’唐山’)说明：查询表a中address值为北京或者上海或者唐山的记录，显示name字段 4.3``.分组查询&gt;4.3.1【使用group by进行分组查询】例：select studentID as 学员编号,AVG(score) as 平均成绩 (注释:这里的score是列名)from score (注释:这里的score是表名)group by studentID说明：在表score中查询，按strdentID字段分组，显示strdentID字段和score字段的平均值；select语句中只允许被分组的列和为每个分组返回的一个值的表达式，例如用一个列名作为参数的聚合函数 4.3.2【使用having子句进行分组筛选】例：select studentID as 学员编号,AVG(score) as 平均成绩 (注释:这里的score是列名)from score (注释:这里的score是表名)group by studentIDhaving count(score)&gt;1说明：接上面例子，显示分组后count(score)&gt;1的行，由于where只能在没有分组时使用，分组后只能使用having来限制条件。 4.4``.多表联接查询&gt;4.4.1内联接 &gt;4.4.1.1【在where子句中指定联接条件】例：select a.name,b.chengjifrom a,bwhere a.name=b.name说明：查询表a和表b中name字段相等的记录，并显示表a中的name字段和表b中的chengji字段&gt;4.4.1.2【在from子句中使用join…on】例：select a.name,b.chengjifrom a inner join bon (a.name=b.name)说明：同上 4.4.2外联接&gt;4.4.2.1【左外联接查询】例：select s.name,c.courseID,c.scorefrom strdents as sleft outer join score as con s.scode=c.strdentID说明：在strdents表和score表中查询满足on条件的行，条件为score表的strdentID与strdents表中的sconde相同&gt;4.4.2.2【右外联接查询】例：select s.name,c.courseID,c.scorefrom strdents as sright outer join score as con s.scode=c.strdentID说明：在strdents表和score表中查询满足on条件的行，条件为strdents表中的sconde与score表的strdentID相同","tags":[{"name":"语法","slug":"语法","permalink":"http://github.com/Jwenqiang/tags/语法/"},{"name":"SQL","slug":"SQL","permalink":"http://github.com/Jwenqiang/tags/SQL/"}]},{"title":"CSS小知识","date":"2017-03-10T02:54:57.000Z","path":"blog/css小常识20170310/","text":"控制一句话长度超出隐藏显示省略号列如： .class{white-space:nowrap;overflow:hidden;text-overflow:ellipsis;} white-space：nowrap;表示文本不会换行，在同一行继续，知道遇到标签为止； overflow：hidden;不显示超过对象尺寸的内容，就是把超出的部分隐藏了； text-overflow：ellipsis;当文本对象溢出是显示…，当然也可是设置属性为clip不显示点点点； 渐变背景的写法 background: -webkit-gradient(linear,left top,left bottom,color-stop(0,#9E9E9E),color-stop(1,#d2c9b5));（颜色代码自定义即可） null和undefined的区别 null和undefined基本是同义的，只有一些细微的差别。 null表示”没有对象”，即该处不应该有值。典型用法是： 作为函数的参数，表示该函数的参数不是对象。 作为对象原型链的终点。 Object.getPrototypeOf(Object.prototype)// null undefined表示”缺少值”，就是此处应该有一个值，但是还没有定义。典型用法是： 变量被声明了，但没有赋值时，就等于undefined。调用函数时，应该提供的参数没有提供，该参数等于undefined。对象没有赋值的属性，该属性的值为undefined。函数没有返回值时，默认返回undefined。 CSS3点跳动&lt;style&gt; dot { display: inline-block; height: 1em; line-height: 1; text-align: left; vertical-align: -.25em; overflow: hidden; font-family: &quot;微软雅黑&quot;; } dot::before { display: block; content: &apos;...\\A..\\A.&apos;; white-space: pre-wrap; animation: dot 3s infinite step-start both; } @keyframes dot { 33% { transform: translateY(-2em); } 66% { transform: translateY(-1em); } } &lt;/style&gt; &lt;h1 style=&quot;font: 10rem/1.2 &apos;楷体&apos;; color: #e9ec09;&quot;&gt; &lt;dot&gt;...&lt;/dot&gt; &lt;/h1&gt;","tags":[{"name":"CSS","slug":"CSS","permalink":"http://github.com/Jwenqiang/tags/CSS/"},{"name":"小知识","slug":"小知识","permalink":"http://github.com/Jwenqiang/tags/小知识/"}]},{"title":"正则表达式语法","date":"2017-03-10T02:54:57.000Z","path":"blog/正则表达式语法20170310/","text":"模式：/a/i a表示字母a i表示不区分大小写 \\d表示数字 \\d{4}表示4个数字 []表示或 比如[\\-]表示\\或者- 边界类 \\b表示单词边界 如/\\bis\\b 表示选择is这个单词 \\B表示非单词边界 ^表示开头 在[]里面时表示取反 $表示结尾 语法： 初始化正则表达式 1、字面量：var reg=/\\bis\\b/g; 2、构造函数：var reg=new RegExp(&apos;\\\\bis\\\\b&apos;,&apos;g&apos;); 修饰符 g:global全文搜索，不添加，搜索到第一个匹配停止 i:ignore case忽略大小写，默认大小写敏感 m:multiple line多行搜索； 元字符 \\t水平指标符 垂直指标符\\v 换行符 \\n 回车符 \\r 空字符 \\0 换页符 \\f 与x对应的控制字符（Ctrl+x） 范围类 [a-z]表示任意26个字母 [a-zA-Z]26个大小写字母 如果想在这里面表示- 则[a-zA-Z-] 量词 ？表示出现零次或一次（最多出现一次） + 出现一次或多次（至少出现一次） * 出现零次或多次（任意次） {n}出现n次 {n,m}出现n到m次 {n,}至少出现n次 分组 比如像要一个单词循环3次 则可以写成(is){3} 反向引用 2015-12-28=&gt;12/28/2015 则可以写成：‘2015-12-28’.replace(/(\\d{4})-(\\d{2})-(\\d{2})/g,&apos;$2$3$1&apos;) 忽略分组 在括号里面加?: 如（is）则写（?:is） 预定义类 .等价于[^\\r\\n] 表示出了回车符和换行符之外的所有字符 \\d 等价于[0-9] 数字字符 \\D等价于[^0-9] 非数字字符 \\s等价于[\\t\\n\\x0B\\f\\r] 空白符 \\S[^\\t\\n\\x0B\\f\\r] 非空白符 \\w等价于[a-zA-Z_0-9]单词字符（字母数字下划线） \\W等价于[a-zA-Z_0-9]非单词字符 方法 test(str) 测试正则表达式的匹配，返回布尔值 exec(str) 之行正则表达式的匹配，返回一个数组 toSource() 返回RegExp对象的源代码 toString() 将RegExp对象转换成字符串 \\u4e00-\\u9fa5 代表所有的中文字符","tags":[{"name":"语法","slug":"语法","permalink":"http://github.com/Jwenqiang/tags/语法/"},{"name":"正则表达式","slug":"正则表达式","permalink":"http://github.com/Jwenqiang/tags/正则表达式/"}]},{"title":"hexo配置","date":"2017-03-10T02:54:57.000Z","path":"blog/hexo配置20170310/","text":"首先我们看看 站点配置文件 的配置 F:\\hexo_config.yml 。 # Hexo Configuration ## Docs: https://hexo.io/docs/configuration.html ## Source: https://github.com/hexojs/hexo/ # Site 网站 title: blog #网站标题 subtitle: 天下事有难易乎？为之，则难者亦易矣；不为，则易者亦难矣。 #网站副标题 description: 天下事有难易乎？为之，则难者亦易矣；不为，则易者亦难矣。 #网站描述 author: Irving #您的名字 language: zh-CN #网站使用的语言 timezone: #网站时区。Hexo 默认使用您电脑的时区 # URL 网址 ## 如果您的网站存放在子目录中，例如 http://yoursite.com/blog，则请将您的 url 设为 http://yoursite.com/blog 并把 root 设为 /blog/。 url: http://jiangwenqiang.pw permalink: :year/:month/:day/:title/ #生成文件名字的格式我改成blog/:title:year:month:day/ permalink_defaults: # Directory 目录配置 source_dir: source #源文件夹，这个文件夹用来存放内容。 public_dir: public #公共文件夹，这个文件夹用于存放生成的站点文件。 tag_dir: tags #标签文件夹 archive_dir: archives #归档文件夹 category_dir: categories #分类文件夹 code_dir: downloads/code #nclude code 文件夹 i18n_dir: :lang #国际化（i18n）文件夹 skip_render: #跳过指定文件的渲染，您可使用 glob 表达式来匹配路径。 # Writing 文章 new_post_name: :title.md # 新建文章默认文件名 default_layout: post # 默认布局 titlecase: false # Transform title into titlecase external_link: true # 在新标签中打开一个外部链接，默认为true filename_case: 0 #转换文件名，1代表小写；2代表大写；默认为0，意思就是创建文章的时候，是否自动帮你转换文件名，默认就行，意义不大。 render_drafts: false #是否渲染_drafts目录下的文章，默认为false post_asset_folder: false #启动 Asset 文件夹 relative_link: false #把链接改为与根目录的相对位址，默认false future: true #显示未来的文章，默认false highlight: #代码块的设置 enable: true line_number: true auto_detect: false tab_replace: # Category &amp; Tag 分类和标签的设置 default_category: uncategorized #默认分类 category_map: #分类别名 tag_map: #标签别名 # Date / Time format ## Hexo uses Moment.js to parse and display date ## You can customize the date format as defined in ## http://momentjs.com/docs/#/displaying/format/ date_format: YYYY-MM-DD time_format: HH:mm:ss # Pagination 分页 ## Set per_page to 0 to disable pagination per_page: 10 #每页显示的文章量 (0 = 关闭分页功能) pagination_dir: page #分页目录 # Extensions ## Plugins: https://hexo.io/plugins/ ## Themes: https://hexo.io/themes/ theme: next feed: type: atom #feed 类型 (atom/rss2) path: atom.xml #rss 路径 limit: 20 #在 rss 中最多生成的文章数(0显示所有) # Deployment ## Docs: https://hexo.io/docs/deployment.html deploy: type: git repository: https://github.com/Jwenqiang/Jiangwenqiang.github.com.git branch: master 主题配置文件favicon: /favicon.ico #站标 可以放在hexo文件夹下的/source里 # Set default keywords (Use a comma to separate) keywords: &quot;...&quot; #网站关键字 # Set rss to false to disable feed link. # Leave rss as empty to use site&apos;s feed link. # Set rss to specific value if you have burned your feed already. rss: #rss这里不设置 引文站点配置文件已经配置了 需要安装插件 # Specify the date when the site was setup since: 1990 #网站时间 从xx开始 类似 1990-2016 # --------------------------------------------------------------- # Menu Settings # --------------------------------------------------------------- # When running hexo in a subdirectory (e.g. domain.tld/blog) # Remove leading slashes ( &quot;/archives&quot; -&gt; &quot;archives&quot; ) menu: #菜单路径设置 如果hexo在二级目录放置要去掉/ home: / archives: /archives #归档 tags: /tags #标签 categories: /categories #分类 about: /about #关于我 commonweal: /404.html #公益404 # Enable/Disable menu icons. # Icon Mapping: # Map a menu item to a specific FontAwesome icon name. # Key is the name of menu item and value is the name of FontAwsome icon. # When an question mask icon presenting up means that the item has no mapping icon. menu_icons: #icon图标 enable: true # Icon Mapping. home: home about: user categories: th tags: tags archives: archive commonweal: heartbeat # --------------------------------------------------------------- # Scheme Settings # --------------------------------------------------------------- # Schemes #next的三个scheme #scheme: Muse #scheme: Mist scheme: Pisces # --------------------------------------------------------------- # Sidebar Settings # --------------------------------------------------------------- # Social links #社交链接 social: GitHub: Weibo: Others: # Social Icons #社交的图标 social_icons: enable: true # Icon Mappings GitHub: github Twitter: twitter Weibo: weibo # Sidebar Avatar # in theme directory(source/images): /images/avatar.jpg # in site directory(source/uploads): /uploads/avatar.jpg # default : /images/default_avatar.jpg avatar: http://7xrz9n.com1.z0.glb.clouddn.com/logo.png #头像 # TOC in the Sidebar #文章自动显示目录 toc: enable: true # Automatically add list number to toc. #目录是否自动显示数字序号 number: false # Creative Commons 4.0 International License. # http://creativecommons.org/ #自由协议 # Available: by | by-nc | by-nc-nd | by-nc-sa | by-nd | by-sa | zero #creative_commons: by-nc-sa #creative_commons: sidebar: # Sidebar Position, available value: left | right position: left #position: right # Sidebar Display, available value: # - post expand on posts automatically. Default. # - always expand for all pages automatically # - hide expand only when click on the sidebar toggle icon. # - remove Totally remove sidebar including sidebar toggle icon. display: post #display: always #display: hide #display: remove # --------------------------------------------------------------- # Misc Theme Settings # --------------------------------------------------------------- # Custom Logo. # !!Only available for Default Scheme currently. # Options: # enabled: [true/false] - Replace with specific image # image: url-of-image - Images&apos;s url custom_logo: enabled: false image: # Code Highlight theme # Available value: # normal | night | night eighties | night blue | night bright # https://github.com/chriskempson/tomorrow-theme highlight_theme: night # Automatically scroll page to section which is under &lt;!-- more --&gt; mark. scroll_to_more: true # Automatically Excerpt auto_excerpt: enable: false length: 150 # Use Lato font use_font_lato: true # --------------------------------------------------------------- # Third Party Services Settings # --------------------------------------------------------------- # MathJax Support mathjax: # Swiftype Search API Key #swiftype_key: # Baidu Analytics ID #baidu_analytics: # Duoshuo ShortName duoshuo_shortname: ... # Disqus #disqus_shortname: # Baidu Share # Available value: # button | slide #baidushare: ## type: button # Share #jiathis: #add_this_id: # Share duoshuo_share: true # Google Webmaster tools verification setting # See: https://www.google.com/webmasters/ #google_site_verification: # Google Analytics #google_analytics: # CNZZ count #cnzz_siteid: # Make duoshuo show UA # user_id must NOT be null when admin_enable is true! # you can visit http://dev.duoshuo.com get duoshuo user id. duoshuo_info: ua_enable: true admin_enable: true user_id: ... admin_nickname: ... # Facebook SDK Support. # https://github.com/iissnan/hexo-theme-next/pull/410 facebook_sdk: enable: false app_id: #&lt;app_id&gt; fb_admin: #&lt;user_id&gt; like_button: #true webmaster: #true # Show number of visitors to each article. # You can visit https://leancloud.cn get AppID and AppKey. leancloud_visitors: enable: true app_id: QImiFijLSOHYufsazlBVlwLg-gzGzoHsz app_key: AMcYaNHy9Y5OdH42k0d4uSED # Tencent analytics ID # tencent_analytics: # Enable baidu push so that the blog will push the url to baidu automatically which is very helpful for SEO baidu_push: true ## 文章末尾是否显示打赏按钮 donate: enable: true text: Enjoy it ? Donate me ! 欣赏此文？求鼓励，求支持！ alipay: wechat: #! --------------------------------------------------------------- #! DO NOT EDIT THE FOLLOWING SETTINGS #! UNLESS YOU KNOW WHAT YOU ARE DOING #! --------------------------------------------------------------- # Motion use_motion: true # Fancybox fancybox: true # Static files vendors: vendors css: css js: js images: images # Theme version version: 0.5.0","tags":[{"name":"hexo","slug":"hexo","permalink":"http://github.com/Jwenqiang/tags/hexo/"},{"name":"配置","slug":"配置","permalink":"http://github.com/Jwenqiang/tags/配置/"}]}]